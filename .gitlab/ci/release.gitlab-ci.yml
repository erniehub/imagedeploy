# This template is used for the publish jobs, which do the following:
#   * Check to see if there is a version bump based on
#     [Conventional Commits (v1.0.0-beta.2)](https://www.conventionalcommits.org/en/v1.0.0-beta.2/)
#     See README.md for more information
#   * If there is a new release it will tag the repository with the new release as the `ops-gitlab-net`
#     user
.semantic-release:
  image: node:12
  stage: release

release-tag:
  stage: release
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  script:
    - 'echo ${CI_JOB_TOKEN} | docker login --password-stdin -u $CI_REGISTRY_USER $CI_REGISTRY'
    - export ci_image="${CI_REGISTRY_IMAGE}"
    - export ci_image_tag=${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
    - export ci_image_tag_major=$(echo $CI_COMMIT_TAG | sed 's/\(v[0-9]\+\)\.[0-9]\+\.[0-9]\+/\1/')
    - echo "Using tag $ci_image_tag for image"
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" $ci_image:latest
    - docker tag "$BUILD_IMAGE_NAME" $ci_image:$ci_image_tag
    - docker tag "$BUILD_IMAGE_NAME" $ci_image:$ci_image_tag_major
    - docker push $ci_image:latest
    - docker push $ci_image:$ci_image_tag
    - docker push $ci_image:$ci_image_tag_major
  rules:
    - if: $CI_COMMIT_TAG

publish:
  extends: .semantic-release
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab
  script:
    - semantic-release
  rules:
    # Only protected branches on the official project
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_REF_PROTECTED == 'true' && $CI_PROJECT_PATH == 'gitlab-org/cluster-integration/auto-deploy-image' && $CI_API_V4_URL == "https://gitlab.com/api/v4"

publish-dryrun:
  extends: .semantic-release
  before_script:
    - npm install -g semantic-release @semantic-release/gitlab
    - git fetch origin refs/merge-requests/$CI_MERGE_REQUEST_IID/merge:$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - git checkout $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    # Overriding the variable that semantic-release runs on.
    # https://github.com/pvdlg/env-ci/blob/master/services/gitlab.js
    - export CI_COMMIT_REF_NAME=$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - unset CI_MERGE_REQUEST_ID
  script:
    - semantic-release -d |tee output.log
    # Check if the bundled chart version matches the next auto-deploy-image version.
    - has_chart_changes=$(git diff @..@^ --name-only | grep 'assets/auto-deploy-app' && exit 0 || echo -n)
    - if [ -z "$has_chart_changes" ]; then echo 'This change does not contain changes for the chart. Skip the validation'; exit 0; fi
    - next_release_version=$(cat output.log | grep -oP "The next release version is \K.*$") || true
    - bundled_chart_version=$(cat assets/auto-deploy-app/Chart.yaml | grep -oP "version:\s*\K.*$")
    - echo "next_release_version is $next_release_version"
    - echo "bundled_chart_version is $bundled_chart_version"
    - |
      if [ -n "${next_release_version}" ] && [ -n "${bundled_chart_version}" ] && [ "${next_release_version}" != "${bundled_chart_version}" ]; then
        cat <<- EOS
      [WARN] auto-deploy-app chart version outdated!
      This merge request changes auto-deploy-app chart, however, the chart version is not updated yet.
      Please set ${next_release_version} to the version column in assets/auto-deploy-app/Chart.yaml to resolve this error.
      EOS
      exit 1
      fi
  rules:
    - if: $CI_MERGE_REQUEST_IID && $CI_PROJECT_PATH == 'gitlab-org/cluster-integration/auto-deploy-image' && $CI_API_V4_URL == "https://gitlab.com/api/v4"
  needs: []
